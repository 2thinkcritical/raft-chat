#!/bin/bash

# –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞

echo "üîç –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞..."
echo "========================================"

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source venv/bin/activate

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_FILES=$(find app/ frontend/ -name "*.py" | wc -l)
TYPE_ERRORS=0
STYLE_ERRORS=0
FORMAT_ERRORS=0

echo ""
echo "üìã 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ (mypy)..."
echo "-------------------------------"
./check_types.sh
if [ $? -eq 0 ]; then
    echo "‚úÖ –¢–∏–ø—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    TYPE_ERRORS=1
    echo "‚ùå –û—à–∏–±–∫–∏ –≤ —Ç–∏–ø–∞—Ö"
fi

echo ""
echo "üìã 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ (ruff)..."
echo "-----------------------------------"
ruff check app/ frontend/
if [ $? -eq 0 ]; then
    echo "‚úÖ –°—Ç–∏–ª—å –∫–æ–¥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    STYLE_ERRORS=1
    echo "‚ùå –û—à–∏–±–∫–∏ –≤ —Å—Ç–∏–ª–µ –∫–æ–¥–∞"
fi

echo ""
echo "üìã 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (ruff format)..."
echo "----------------------------------------------"
ruff format --check app/ frontend/
if [ $? -eq 0 ]; then
    echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    FORMAT_ERRORS=1
    echo "‚ùå –ö–æ–¥ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"
fi

echo ""
echo "üìã 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python..."
echo "-----------------------------------"
python3 -m py_compile app/main.py app/database.py app/vector_store.py app/process_question.py app/callbacks.py frontend/gradio_app.py 2>/dev/null
if [ $? -eq 0 ]; then
    echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å Python –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    echo "‚ùå –û—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python"
    exit 1
fi

echo ""
echo "========================================"
echo "üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
echo "========================================"
echo "   üìÅ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $TOTAL_FILES"
echo "   ‚úÖ –û—à–∏–±–æ–∫ —Ç–∏–ø–æ–≤: $TYPE_ERRORS"
echo "   ‚úÖ –û—à–∏–±–æ–∫ —Å—Ç–∏–ª—è: $STYLE_ERRORS"
echo "   ‚úÖ –û—à–∏–±–æ–∫ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $FORMAT_ERRORS"
echo "   ‚úÖ –û—à–∏–±–æ–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: 0"

echo ""
if [ $TYPE_ERRORS -eq 0 ] && [ $STYLE_ERRORS -eq 0 ] && [ $FORMAT_ERRORS -eq 0 ]; then
    echo "üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
    echo "üöÄ –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –≤—ã–∫–ª–∞–¥–∫–µ –≤ GitHub"
    echo "üèÜ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞"
else
    echo "‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:"
    [ $TYPE_ERRORS -eq 1 ] && echo "   - –û—à–∏–±–∫–∏ —Ç–∏–ø–æ–≤ (mypy)"
    [ $STYLE_ERRORS -eq 1 ] && echo "   - –û—à–∏–±–∫–∏ —Å—Ç–∏–ª—è (ruff)"
    [ $FORMAT_ERRORS -eq 1 ] && echo "   - –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (ruff format)"
    echo ""
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:"
    echo "   - ruff check --fix app/ frontend/     # –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–ª—å"
    echo "   - ruff format app/ frontend/          # –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"
    exit 1
fi

echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   - ./check_types.sh      # –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤"
echo "   - ./check_ruff.sh       # –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ ruff"
echo "   - ruff format app/ frontend/     # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
echo "   - ruff check --fix app/ frontend/ # –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" 