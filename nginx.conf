events { worker_connections 1024; }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;

    ### upstream-ы
    upstream backend  { server backend:8000; }
    upstream frontend { server frontend:7860; }

    server {
        listen 80;
        server_name _;   # любой хост

        # ---------- API (FastAPI) ----------
        location /api/ {
            proxy_pass http://backend/;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Добавляем логирование для отладки
            access_log /var/log/nginx/api_access.log main;
            error_log  /var/log/nginx/api_error.log debug;
        }

        # ---------- Gradio очередь ----------
        location /queue/ {
            proxy_pass          http://frontend;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade        $http_upgrade;
            proxy_set_header    Connection     "upgrade";

            proxy_buffering          off;
            proxy_request_buffering  off;
            proxy_cache              off;
        }

        # ---------- Остальной фронт ----------
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header  Upgrade        $http_upgrade;
            proxy_set_header  Connection     "upgrade";
            proxy_set_header  Host           $host;

            proxy_buffering off;        # Gradio рендерит потоками
        }

        # ---------- Health ----------
        location /health {
            proxy_pass http://backend/health;
        }
    }
}
